{
  "name": "configure_pl_nexus",
  "content": "import groovy.json.JsonSlurper\nimport org.sonatype.nexus.blobstore.api.BlobStoreManager\nimport org.sonatype.nexus.repository.maven.LayoutPolicy\nimport org.sonatype.nexus.repository.maven.VersionPolicy\nimport org.sonatype.nexus.repository.storage.WritePolicy\nsecurity.setAnonymousAccess(true)\nsecurity.getAnonymousManager().getConfiguration().setRealmName('NexusAuthenticatingRealm')\ndef request = new JsonSlurper().parseText(args)\ntry {\n    security.getSecuritySystem().getUser(request.user as String)\n} catch (ignored) {\n    security.addUser('nexus-api', 'John', 'Doe', 'john-doe@noemail.com', true, request.password as String, ['Admins', 'nx-admin'])\n}\nif (!repository.getRepositoryManager().get('maven-central')) {\n    repository.createMavenProxy('maven-central', 'https://repo1.maven.org/maven2/', BlobStoreManager.DEFAULT_BLOBSTORE_NAME, true, VersionPolicy.RELEASE, LayoutPolicy.PERMISSIVE)\n}\nif (!repository.getRepositoryManager().get('maven-snapshots')) {\n    repository.createMavenHosted('maven-snapshots', BlobStoreManager.DEFAULT_BLOBSTORE_NAME, true, VersionPolicy.SNAPSHOT, WritePolicy.ALLOW, LayoutPolicy.PERMISSIVE)\n}\nif (!repository.getRepositoryManager().get('maven-releases')) {\n    repository.createMavenHosted('maven-releases', BlobStoreManager.DEFAULT_BLOBSTORE_NAME, true, VersionPolicy.RELEASE, WritePolicy.ALLOW_ONCE, LayoutPolicy.STRICT)\n}\nif (!repository.getRepositoryManager().get('maven-public')) {\n    def mavenGroup = ['maven-central', 'maven-snapshots', 'maven-releases']\n    repository.createMavenGroup('maven-public', mavenGroup, BlobStoreManager.DEFAULT_BLOBSTORE_NAME)\n}\nif (!repository.getRepositoryManager().get('docker')) {\n    repository.createDockerHosted('docker', 5000, null, BlobStoreManager.DEFAULT_BLOBSTORE_NAME, true, true, WritePolicy.ALLOW)\n}\nif (!repository.getRepositoryManager().get('npmjs')) {\n    repository.createNpmProxy('npmjs', 'https://registry.npmjs.org', BlobStoreManager.DEFAULT_BLOBSTORE_NAME)\n}\nif (!repository.getRepositoryManager().get('npm-registry')) {\n    repository.createNpmHosted('npm-registry', BlobStoreManager.DEFAULT_BLOBSTORE_NAME, true, WritePolicy.ALLOW_ONCE)\n}\nif (!repository.getRepositoryManager().get('npm')) {\n    def npmGroup = ['npmjs', 'npm-registry']\n    repository.createNpmGroup('npm', npmGroup, BlobStoreManager.DEFAULT_BLOBSTORE_NAME)\n}\n\n",
  "type": "groovy"
}
